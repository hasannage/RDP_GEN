name: Windows RDP Auto-Renew

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # تشغيل كل 6 ساعات

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 350   # مدة تشغيل ~6 ساعات

    steps:
    - name: إعداد البيئة
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        echo "✅ البيئة جاهزة"

    - name: تثبيت وتشغيل Tailscale
      run: |
        choco install tailscale -y
        Start-Sleep -Seconds 10
        $tsExe = "$env:ProgramFiles\Tailscale\tailscale.exe"
        & $tsExe up --authkey ${{ secrets.TAILSCALE_KEY }} --hostname GitHubRDP --accept-routes

    - name: إنشاء مستخدم جديد
      run: |
        net user githubadmin Pass@123 /add
        net localgroup administrators githubadmin /add
        echo "✅ تم إنشاء المستخدم githubadmin"

    - name: تمكين RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        echo "✅ تم تفعيل RDP"

    - name: الحصول على IP
      id: get_ip
      shell: powershell
      run: |
        $ip = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.InterfaceAlias -ne "Loopback Pseudo-Interface 1"} | Select-Object -First 1 -ExpandProperty IPAddress)
        echo "ip_address=$ip" >> $env:GITHUB_OUTPUT

    - name: إرسال إشعار عبر Telegram
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        $msg = "🔔 *Windows RDP جاهز!*`n`n*IP:* `${{ steps.get_ip.outputs.ip_address }}``n*Username:* `githubadmin``n*Password:* `Pass@123``n⏱️ *التجديد التالي خلال 6 ساعات*"
        $url = "https://api.telegram.org/bot$env:TELEGRAM_TOKEN/sendMessage"
        $body = @{
          chat_id = $env:TELEGRAM_CHAT_ID
          text = $msg
          parse_mode = "Markdown"
        }
        Invoke-RestMethod -Uri $url -Method POST -Body $body

    - name: إبقاء الاتصال (loop إعلامي)
      shell: pwsh
      run: |
        Write-Host "`n=== RDP ACCESS ==="
        Write-Host "IP: ${{ steps.get_ip.outputs.ip_address }}"
        Write-Host "Username: githubadmin"
        Write-Host "Password: Pass@123"
        Write-Host "==================`n"
        while ($true) {
          Write-Host "[$(Get-Date -Format s)] الجلسة نشطة، ستجدد تلقائيًا بعد انتهاء المدة."
          Start-Sleep -Seconds 300
        }

    - name: إعادة تشغيل Workflow تلقائيًا
      if: always()
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        REPO: ${{ github.repository }}
        WORKFLOW_FILE: rdp.yml   # <-- تأكد أن هذا هو اسم الملف الفعلي في المستودع
      run: |
        Start-Sleep -Seconds 5
        $uri = "https://api.github.com/repos/$env:REPO/actions/workflows/$env:WORKFLOW_FILE/dispatches"
        $headers = @{
          Authorization = "Bearer $env:GH_TOKEN"
          Accept = "application/vnd.github+json"
          "User-Agent" = "gh-actions-autorestart"
        }
        $body = @{ ref = "${{ github.ref_name || 'main' }}" }
        try {
          Invoke-RestMethod -Uri $uri -Method Post -Headers $headers -Body ($body | ConvertTo-Json -Depth 4)
          Write-Host "✅ تم إعادة تشغيل Workflow تلقائيًا"
        } catch {
          Write-Warning "⚠️ فشل في إعادة تشغيل Workflow: $_"
        }
